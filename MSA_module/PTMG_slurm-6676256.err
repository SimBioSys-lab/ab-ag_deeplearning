/work/hdd/bdtb/xliu27/ab-ag_deeplearning/MSA_module/PT_MG_CV.py:118: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  core_params = torch.load('itfssitfsaitfssmodel_fold2_l1_g2_i1_dp0.1_core.pth', map_location=device)
/work/hdd/bdtb/xliu27/ab-ag_deeplearning/MSA_module/PT_MG_CV.py:72: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  edge_pad[:, :edge_index.shape[0]] = torch.tensor(edge_index.T, dtype=torch.long)
Traceback (most recent call last):
  File "/work/hdd/bdtb/xliu27/ab-ag_deeplearning/MSA_module/PT_MG_CV.py", line 155, in <module>
    output_seq, last_attention = model(sequence_tensor, padded_edges, return_attention=True)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/parallel/data_parallel.py", line 193, in forward
    outputs = self.parallel_apply(replicas, inputs, module_kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/parallel/data_parallel.py", line 212, in parallel_apply
    return parallel_apply(
           ^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/parallel/parallel_apply.py", line 126, in parallel_apply
    output.reraise()
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/_utils.py", line 715, in reraise
    raise exception
TypeError: Caught TypeError in replica 2 on device 2.
Original Traceback (most recent call last):
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/parallel/parallel_apply.py", line 96, in _worker
    output = module(*input, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/u/xliu27/miniconda3/envs/msa/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: ClassificationModel.forward() missing 2 required positional arguments: 'sequences' and 'padded_edges'

srun: error: gpub074: task 0: Exited with exit code 1
